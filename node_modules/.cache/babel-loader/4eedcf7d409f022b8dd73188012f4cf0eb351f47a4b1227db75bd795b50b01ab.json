{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lefty\\\\Documents\\\\reactproject\\\\music-player\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport \"./styles/app.scss\";\n//Import Components\nimport Player from \"./components/Player\";\nimport Song from \"./components/Song\";\nimport Library from \"./components/Library\";\nimport Nav from \"./components/Nav\";\n//Import data\nimport chillhop from \"./data\";\n//Util\nimport { playAudio } from \"./util\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //Ref\n  const audioRef = useRef(null);\n  const [songs, setSongs] = useState(chillhop());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n    animationPercentage: 0,\n    volume: 0\n  });\n  const [libraryStatus, setLibraryStatus] = useState(false);\n  const timeUpdateHandler = e => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    const roundedCurrent = Math.round(current);\n    const roundedDuration = Math.round(duration);\n    const percentage = Math.round(roundedCurrent / roundedDuration * 100);\n    setSongInfo({\n      ...songInfo,\n      currentTime: current,\n      duration: duration,\n      animationPercentage: percentage,\n      volume: e.target.volume\n    });\n  };\n  const songEndHandler = async () => {\n    let currentIndex = songs.findIndex(song => song.id === currentSong.id);\n    await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n    playAudio(isPlaying, audioRef);\n    return;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `App ${libraryStatus ? \"library-active\" : \"\"}`,\n    children: [/*#__PURE__*/_jsxDEV(Nav, {\n      libraryStatus: libraryStatus,\n      setLibraryStatus: setLibraryStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Song, {\n      isPlaying: isPlaying,\n      currentSong: currentSong\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Player, {\n      audioRef: audioRef,\n      setIsPlaying: setIsPlaying,\n      currentSong: currentSong,\n      isPlaying: isPlaying,\n      songInfo: songInfo,\n      setSongInfo: setSongInfo,\n      songs: songs,\n      setSongs: setSongs,\n      setCurrentSong: setCurrentSong\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Library, {\n      songs: songs,\n      setCurrentSong: setCurrentSong,\n      audioRef: audioRef,\n      isPlaying: isPlaying,\n      setSongs: setSongs,\n      libraryStatus: libraryStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      onLoadedMetadata: timeUpdateHandler,\n      onTimeUpdate: timeUpdateHandler,\n      ref: audioRef,\n      src: currentSong.audio,\n      onEnded: songEndHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"2Tp3r+CdszrNKOMmxlsZS648NtI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","Player","Song","Library","Nav","chillhop","playAudio","jsxDEV","_jsxDEV","App","_s","audioRef","songs","setSongs","currentSong","setCurrentSong","isPlaying","setIsPlaying","songInfo","setSongInfo","currentTime","duration","animationPercentage","volume","libraryStatus","setLibraryStatus","timeUpdateHandler","e","current","target","roundedCurrent","Math","round","roundedDuration","percentage","songEndHandler","currentIndex","findIndex","song","id","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onLoadedMetadata","onTimeUpdate","ref","src","audio","onEnded","_c","$RefreshReg$"],"sources":["C:/Users/lefty/Documents/reactproject/music-player/src/App.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\nimport \"./styles/app.scss\";\n//Import Components\nimport Player from \"./components/Player\";\nimport Song from \"./components/Song\";\nimport Library from \"./components/Library\";\nimport Nav from \"./components/Nav\";\n//Import data\nimport chillhop from \"./data\";\n//Util\nimport { playAudio } from \"./util\";\n\nfunction App() {\n  //Ref\n  const audioRef = useRef(null);\n\n  const [songs, setSongs] = useState(chillhop());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n    animationPercentage: 0,\n    volume: 0,\n  });\n  const [libraryStatus, setLibraryStatus] = useState(false);\n\n  const timeUpdateHandler = (e) => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n\n    const roundedCurrent = Math.round(current);\n    const roundedDuration = Math.round(duration);\n    const percentage = Math.round((roundedCurrent / roundedDuration) * 100);\n    setSongInfo({\n      ...songInfo,\n      currentTime: current,\n      duration: duration,\n      animationPercentage: percentage,\n      volume: e.target.volume,\n    });\n  };\n  const songEndHandler = async () => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n    await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n    playAudio(isPlaying, audioRef);\n    return;\n  };\n  return (\n    <div className={`App ${libraryStatus ? \"library-active\" : \"\"}`}>\n      <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus} />\n      <Song isPlaying={isPlaying} currentSong={currentSong} />\n      <Player\n        audioRef={audioRef}\n        setIsPlaying={setIsPlaying}\n        currentSong={currentSong}\n        isPlaying={isPlaying}\n        songInfo={songInfo}\n        setSongInfo={setSongInfo}\n        songs={songs}\n        setSongs={setSongs}\n        setCurrentSong={setCurrentSong}\n      />\n      <Library\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        audioRef={audioRef}\n        isPlaying={isPlaying}\n        setSongs={setSongs}\n        libraryStatus={libraryStatus}\n      />\n      <audio\n        onLoadedMetadata={timeUpdateHandler}\n        onTimeUpdate={timeUpdateHandler}\n        ref={audioRef}\n        src={currentSong.audio}\n        onEnded={songEndHandler}\n      ></audio>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}