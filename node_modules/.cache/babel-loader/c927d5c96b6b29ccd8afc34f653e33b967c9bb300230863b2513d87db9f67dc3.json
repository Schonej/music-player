{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lefty\\\\Documents\\\\reactproject\\\\music-player\\\\src\\\\components\\\\LibrarySong.js\";\nimport React from \"react\";\nimport { playAudio } from \"../util\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LibrarySong = _ref => {\n  let {\n    name,\n    artist,\n    cover,\n    id,\n    setCurrentSong,\n    songs,\n    audioRef,\n    isPlaying,\n    setSongs,\n    active\n  } = _ref;\n  const songSelectHandler = () => {\n    const selectedSong = songs.filter(state => state.id === id);\n    setCurrentSong({\n      ...selectedSong[0]\n    });\n    //Set Active in library\n    const newSongs = songs.map(song => {\n      if (song.id === id) {\n        return {\n          ...song,\n          active: true\n        };\n      } else {\n        return {\n          ...song,\n          active: false\n        };\n      }\n    });\n    setSongs(newSongs);\n\n    //Play audio\n    playAudio(isPlaying, audioRef);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: songSelectHandler,\n    className: `library-song ${active ? \"selected\" : \"\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: cover,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"song-description\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: artist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_c = LibrarySong;\nexport default LibrarySong;\nvar _c;\n$RefreshReg$(_c, \"LibrarySong\");","map":{"version":3,"names":["React","playAudio","jsxDEV","_jsxDEV","LibrarySong","_ref","name","artist","cover","id","setCurrentSong","songs","audioRef","isPlaying","setSongs","active","songSelectHandler","selectedSong","filter","state","newSongs","map","song","onClick","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/lefty/Documents/reactproject/music-player/src/components/LibrarySong.js"],"sourcesContent":["import React from \"react\";\r\nimport { playAudio } from \"../util\";\r\n\r\nconst LibrarySong = ({\r\n  name,\r\n  artist,\r\n  cover,\r\n  id,\r\n  setCurrentSong,\r\n  songs,\r\n  audioRef,\r\n  isPlaying,\r\n  setSongs,\r\n  active,\r\n}) => {\r\n  const songSelectHandler = () => {\r\n    const selectedSong = songs.filter((state) => state.id === id);\r\n    setCurrentSong({ ...selectedSong[0] });\r\n    //Set Active in library\r\n    const newSongs = songs.map((song) => {\r\n      if (song.id === id) {\r\n        return {\r\n          ...song,\r\n          active: true,\r\n        };\r\n      } else {\r\n        return {\r\n          ...song,\r\n          active: false,\r\n        };\r\n      }\r\n    });\r\n    setSongs(newSongs);\r\n\r\n    //Play audio\r\n    playAudio(isPlaying, audioRef);\r\n  };\r\n  return (\r\n    <div\r\n      onClick={songSelectHandler}\r\n      className={`library-song ${active ? \"selected\" : \"\"}`}\r\n    >\r\n      <img src={cover} alt=\"\" />\r\n      <div className=\"song-description\">\r\n        <h3>{name}</h3>\r\n        <h4>{artist}</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LibrarySong;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,WAAW,GAAGC,IAAA,IAWd;EAAA,IAXe;IACnBC,IAAI;IACJC,MAAM;IACNC,KAAK;IACLC,EAAE;IACFC,cAAc;IACdC,KAAK;IACLC,QAAQ;IACRC,SAAS;IACTC,QAAQ;IACRC;EACF,CAAC,GAAAV,IAAA;EACC,MAAMW,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,MAAMC,YAAY,GAAGN,KAAK,CAACO,MAAM,CAAEC,KAAK,IAAKA,KAAK,CAACV,EAAE,KAAKA,EAAE,CAAC;IAC7DC,cAAc,CAAC;MAAE,GAAGO,YAAY,CAAC,CAAC;IAAE,CAAC,CAAC;IACtC;IACA,MAAMG,QAAQ,GAAGT,KAAK,CAACU,GAAG,CAAEC,IAAI,IAAK;MACnC,IAAIA,IAAI,CAACb,EAAE,KAAKA,EAAE,EAAE;QAClB,OAAO;UACL,GAAGa,IAAI;UACPP,MAAM,EAAE;QACV,CAAC;MACH,CAAC,MAAM;QACL,OAAO;UACL,GAAGO,IAAI;UACPP,MAAM,EAAE;QACV,CAAC;MACH;IACF,CAAC,CAAC;IACFD,QAAQ,CAACM,QAAQ,CAAC;;IAElB;IACAnB,SAAS,CAACY,SAAS,EAAED,QAAQ,CAAC;EAChC,CAAC;EACD,oBACET,OAAA;IACEoB,OAAO,EAAEP,iBAAkB;IAC3BQ,SAAS,EAAG,gBAAeT,MAAM,GAAG,UAAU,GAAG,EAAG,EAAE;IAAAU,QAAA,gBAEtDtB,OAAA;MAAKuB,GAAG,EAAElB,KAAM;MAACmB,GAAG,EAAC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1B5B,OAAA;MAAKqB,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/BtB,OAAA;QAAAsB,QAAA,EAAKnB;MAAI;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACf5B,OAAA;QAAAsB,QAAA,EAAKlB;MAAM;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACC,EAAA,GA9CI5B,WAAW;AAgDjB,eAAeA,WAAW;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}